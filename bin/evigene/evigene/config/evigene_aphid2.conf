# evigene_aphid2.conf
# evigene config for annotate_predictions.pl and evaluate_predictions.pl
# syntax: key value with group headers, # comments
## adding pubopt for bestgenes_

# $evigene/scripts/annotate_predictions.pl -verb -vers an4 -conf genes/evigene_aphid2.conf \
#  genes/aphid2_*-augmap.gff.gz > & genes/bestgenes_of8.an4.log

name    pea_aphid2
genome  aphid2asm
date    2011apr

# group: data files (gff)
evidence:
  est           est/est_uniq.gff.gz
  pro           prot/protein_uniq.gff.gz
  rseq          rnas/rnaseq_uniq.gff.gz
  terepeat      misc/transposon.gff.gz
  ref           refseq/refseq-genes.gff.gz   # need uniq here? not many 1000 of these
  intr          intron/intron_good.gff.gz   # change to  intron_good.gff.gz  # for eval not annot
  insplit       intron/intron_good.gff.gz
  pasa          est/pasa_assemblies.gff.gz
  allevd        est/all_evd_exons.gff.gz     # for evaluate only
  cdna_eval     est/pasa_genes.gff.gz        # for evaluate only
  progene_eval  prot/protein_uniq.gff.gz      # uniq or not here?
  blastself     genes/aaeval/*-self.blastp.gz   # for annotation add_blastscores()
  blastother    genes/aaeval/*.blastp.gz    # for annotation add_blastscores()
  mustkeepdrop  genes/mustkeepdrop.list 	# for bestgenes, expert selections
  mustkeeptab   genes/mustkeep.pickresults.tab  # source for mustgenes.gff
  mustgff	genes/mustgenes.gff
  genescore     genes/*.genescore           # table combining several per-gene/mRNA scores: homolog= inqual= ..
  pasa_updates  genes/bestgenes.pasaupd.gff	# pasa update of current bestgenes : VERSION??
  genome	genome/aphid2asm.fa		# for bestgene_update
  chrindex      genome/aphid2asm.fa.count	# use order of col1 chrs for sort order

end evidence

#  4331097 Oct  1 14:14 est/all_evd_exons.gff.gz   # updated this using new rnaseq_uniq
#  2078802 Oct  1 14:12 est/est_uniq.gff.gz 
#         ## ?? update to epasa2/pasa_out2 using rnaseq asm; not yet?
#       53 Jan 24 12:54 est/pasa_assemblies.gff.gz -> ../epasa/pasa_out/pasa_aphid2.  nexon=130901
#         # ../epasa2/pasa_out2/pasa2_aphid2.assemblies.gff3.gz  nexon=397167
#       37 Jan 24 12:54 est/pasa_genes.gff.gz -> ../epasa/pasatrain_genes.best1.gff  ngene=10371
#          # ../epasa2/pasa_out2/pasa2_aphid2.asmbl_bestgenes.gff.gz ngene=186453 << alttr + crap
#       18 Jan 24 12:54 intron/intron.gff.gz -> introns_all.gff.gz
#  2363726 Oct  4 11:26 misc/transposon.gff.gz
#  2495017 Oct  1 14:00 prot/protein_uniq.gff.gz # mostly clean of TE overlaps: 6169/98039 prot CDS have TE
#       27 Jan 24 12:54 refseq/refseq-genes.gff.gz -> aphid_valrefseq.gmap.gff.gz
#       46 Mar 28 22:33 rnas/rnaseq_uniq.gff.gz -> velmapt7/aphid_rnaseq.all27cuff8.u
#       
 
# group: evaluate keys and options
evkeys      est pro rseq ref intr terepeat
evmorekeys  allevd cdna_eval progene_eval homology_eval

alt_transcript_id  t[2-9][0-9]*$     # mRNA id alt-transcript pattern

#d # debug homology_eval
#d evkeys      ref 
#d evmorekeys  homology_eval

evoption:
  est     overlapfilter -strand -pass 'exon,HSP' -pct 50 -act keep -base -sumbase
  pro     overlapfilter -strand -pass CDS -pct 50  -act keep -base -sumbase
  rseq    overlapfilter -strand -pass exon -pct 50  -act keep -base -sumbase
  intr    overlapfilter -strand -intron2splice=2 -pass 'exon,intron' -act keep -base
  terepeat  overlapfilter -strand -pass 'exon,transposon' -pct 50 -act keep -base -sumbase
  pasa    overlapfilter -nostrand -pass 'exon,cDNA_match' -pct 50  -act keep -base -sumbase
  ref     overlapfilter  -strand -pass 'exon' -pct 50  -act keep -base -sumbase
  homology_eval  # internal method prot_homology() uses prediction annotations
  allevd      overlapfilter -strand -pass exon -pct 50 -act keep -base # -over $allevdfile -in $pred 
  cdna_eval   overlapeval -strand -pass exon -pct 50 # opts for overlapeval
  progene_eval  overlapeval -strand -pass CDS -pct 50 # opts for overlapeval
end evoption


# group: annotation keys and options
ankeys    est pro rseq ref intr pasa terepeat
anmorekeys  homology_annot genescore insplit bestgenes
  # homology_annot = add_genescore using genescore tables
  # bestgenes = make_bestgenes with overbestgenes

anoption:
  est     overlapfilter -strand -pass 'exon,HSP' -pct 10 -act markbase
  pro     overlapfilter -strand -pass CDS -pct 10 -act markidbase
  rseq    overlapfilter -strand -pass exon -pct 10 -act markidbase
  #old#intr    overlapfilter -nostrand -intron2splice=1 -pass 'exon,intron' -act markid -midtype scoresum
  intr    overlapfilter -intron2splice=error -pass 'exon,intron' -act markid -midtype scoresum
  terepeat  overlapfilter -strand -pass 'exon,transposon' -pct 10 -act markbase
  pasa    overlapfilter -nostrand -pass 'exon,cDNA_match' -pct 10 -act markidbase
  ref     overlapfilter -strand -pass 'exon' -pct 10 -act markidbase
  homology_annot  # internal method add_genescore
  insplit = overlapfilter -strand -intron2splice=2 -pass 'intron,exon' -act markid 
   
#   # bestgenes: complex options, must match ankeys, added by program? or set here ?
#   old_bestgenes4  overbestgenes  -genegroup='homolog,paralog,pasa,pro,ref,rseq' 
#   +  -scoretype='many.homolog:6,paralog:2,ref:6,est:4,pro:3,rseq:3,intr:3,insplit:-50,pasa:2,terepeat:-3,UTR:1,CDS:1' 
#   +  -dropscore='homolog:40,paralog:40,ref:40,est:60,pro:60,rseq:60,intr:1,pasa:60,CDS:180' 
#   +  -typeover CDS  -OVEREXON2 -pctover 10 -genescore -summarize 
# 
#   old_bestgenes6a  overbestgenes  -genegroup='homolog,paralog,pro,ref,rseq'
#   +  -scoretype='many.homolog:6,paralog:3,ref:6,est:3,pro:3,rseq:3,intr:9,insplit:-4,pasa:1,terepeat:-2,UTR:3,CDS:1'
#   +  -dropscore='homolog:40,paralog:40,ref:40,est:60,pro:60,rseq:60,intr:1,pasa:60,CDS:180'
#   +  -pctover 10 -trivial 10 -skip -summarize
# 
#   # too many paralog-only, weak evd (+ te) genes in 6a.
#   old_bestgenes6b  overbestgenes  -genegroup='homolog,paralog,ref,rseq'
#   +  -scoretype='many.homolog:9,paralog:2,ref:6,est:3,pro:3,rseq:3,intr:20,insplit:-9,pasa:1,terepeat:-9,UTR:9,CDS:1'
#   +  -dropscore='homolog:40,paralog:120,ref:60,est:60,pro:60,rseq:60,intr:1,pasa:60,CDS:180'
#   +  -pctover 10 -trivial 10 -summarize
# 
#   # restrict trivial gene out w/ +require,-restrict dropscore: +CDS:180,-terepeat:120
#   #  -dropscore='+homolog:50,paralog:60,est:60,pro:60,rseq:60,intr:1,pasa:60,+CDS:180,-terepeat:60'  \
#   # .. this is not great; lower overall eval; better to keep temodels but mark/ dont count as genes
#   # .. remove dropscore=paralog ; have many paralogs-only
#   
#   old_bestgenes6c  overbestgenes  -genegroup='homolog,paralog,ref,rseq'
#   +  -scoretype='many.homolog:9,paralog:1,ref:6,est:4,pro:3,rseq:4,intr:20,insplit:-9,terepeat:-9,UTR:3,CDS:1'
#   +  -dropscore='homolog:40,paralog:120,ref:60,est:60,pro:60,rseq:60,intr:1,+CDS:180,-terepeat:120'
#   +  -pctover 10 -trivial 10 -summarize
# 
#   old_bestgenes6d  overbestgenes  -genegroup='homolog,paralog,ref,rseq'
#   +  -scoretype='many.homolog:9,paralog:1,ref:6,est:4,pro:3,rseq:4,intr:20,insplit:-9,terepeat:-9,UTR:9,CDS:1'
#   +  -dropscore='homolog:30,ref:80,est:80,pro:80,rseq:80,intr:1,+CDS:180'
#   +  -pctover 10 -trivial 10 -summarize
  
  # bestgenes6f : emphasize homolog score ; 
  # bestgenes6g upd: reduce UTR wt 9>3
  #   -scoretype='many.homolog:20,paralog:1,ref:6,est:4,pro:3,rseq:4,intr:20,insplit:-9,terepeat:-4,UTR:3,CDS:1'
  # bestgenes6h upd: reduce UTR:1, up paralog/expression/prot 
  old6_bestgenes  overbestgenes  -genegroup='homolog,paralog,ref,rseq'
  +  -scoretype='many.homolog:20,paralog:4,ref:5,est:5,pro:5,rseq:5,intr:20,insplit:-9,terepeat:-1,UTR:1,CDS:2'
  +  -dropscore='homolog:30,ref:119,est:119,pro:119,rseq:119,intr:1,+CDS:180'
  +  -pctover 10 -trivial 10 -skip -summarize

   # best.an7 a,b,c
   # an7b: -scoretype='many.homolog:20,paralog:4,ref:5,est:5,pro:5,rseq:5,intr:20,insplit:-9,terepeat:-1,UTR:1,CDS:2'
   # an7c: -scoretype='many.homolog:20,paralog:2,ref:5,est:5,pro:5,rseq:5,intr:10,insplit:-5,terepeat:-1,UTR:1,CDS:1'
   # ^^ scores dropped off, adding aphid0, paaphid0
   # an7d: -scoretype='many.homolog:20,paralog:4,ref:5,est:5,pro:5,rseq:4,intr:15,insplit:-5,CDS:1'
   # an7e: -scoretype='many.homolog:30,paralog:4,ref:5,est:5,pro:5,rseq:5,intr:20,insplit:-9,terepeat:-1,CDS:2'
   # an7f: -scoretype='many.homolog:30,paralog:4,ref:5,est:5,pro:5,rseq:5,intr:20,insplit:-19,terepeat:-1,UTR:1,CDS:2'

  old7g_bestgenes  overbestgenes  -genegroup='homolog,paralog,ref,rseq'
  +  -scoretype='many.homolog:30,paralog:4,ref:5,est:5,pro:5,rseq:5,intr:20,insplit:-19,terepeat:-1,UTR:1,CDS:2'
  +  -dropscore='homolog:30,ref:119,est:119,pro:119,rseq:119,intr:1,+CDS:180'
  +  -pctover 10 -trivial 10 -skip -summarize
  
  # best7i: add nintron:20 score, mRNA attr inexon=validin/nin < nexon instead of nintron here
  # .. esp. for introns, model w/ 5 of 5 exons w/ intron match scores >> 2 models same locus w/ 2,3 exon-intron matches
  # nintron == new special score field (exons w/ valid introns), not same as intr (total score)
  
  old7k_bestgenes  overbestgenes  -genegroup='homolog,paralog,ref,rseq'
  +  -scoretype='many.homolog:30,paralog:4,ref:5,est:5,pro:5,rseq:5,intr:20,nintron:100,insplit:-10,terepeat:-1,UTR:1,CDS:2'
  +  -dropscore='homolog:30,ref:119,est:119,pro:119,rseq:119,intr:1,+CDS:180'
  +  -pctover 10 -trivial 10 -skip -summarize
  
  # best7m :skip 7l : test intron quality score : inqual:10 replacing insplit
  # bringing in rnagene/cufftrin_infull.gff to get more complete models
  # reduce all other scores to 1-10 range,

  old7m_bestgenes  overbestgenes  -genegroup='homolog,paralog,ref,rseq'
  +  -scoretype='homolog:7,paralog:1,ref:3,est:3,pro:3,rseq:3,intr:7,nintron:10,inqual:10,terepeat:-1,UTR:1,CDS:2'
  +  -dropscore='homolog:30,ref:119,est:119,pro:119,rseq:119,intr:1,+CDS:180'
  +  -pctover 10 -trivial 10 -skip -summarize
  
  # 7n: give introns more weight, express less; want dropscore  '+(CDS:180,inqual:200)' nesting
  old7n_bestgenes  overbestgenes  -genegroup='homolog,paralog,ref,rseq'
  +  -scoretype='homolog:7,paralog:1,ref:3,est:2,pro:2,rseq:2,intr:19,nintron:50,inqual:50,terepeat:-1,UTR:1,CDS:1'
  +  -dropscore='homolog:30,ref:119,est:119,pro:119,rseq:119,intr:1,+CDS:180'
  +  -pctover 10 -trivial 10 -skip -summarize

  # 7o: add -must=mustkeepdrop.list input id list
  old7o_bestgenes  overbestgenes  -genegroup='homolog,paralog,ref,rseq' 
  +  -scoretype='homolog:7,paralog:1,ref:3,est:3,pro:3,rseq:3,intr:9,nintron:20,inqual:50,terepeat:-1,UTR:1,CDS:1'
  +  -dropscore='homolog:30,ref:119,est:119,pro:119,rseq:119,intr:1,+CDS:180'
  +  -pctover 10 -trivial 10 -skip -summarize

  # 7p: fix -must=mustkeepdrop.list input id list; readjust >introns, but <inqual
  old7p_bestgenes  overbestgenes  -genegroup='homolog,paralog,ref,rseq'
  +  -scoretype='homolog:7,paralog:1,ref:3,est:3,pro:3,rseq:2,intr:20,nintron:50,inqual:20,terepeat:-1,UTR:1,CDS:1'
  +  -dropscore='homolog:30,ref:119,est:119,pro:119,rseq:119,intr:1,+CDS:180'
  +  -pctover 10 -trivial 10 -skip -summarize

  # 7q. using inqual= inmatescore.pl scoring (replacing old inqual=); should change overbest genegroup for inqual=perfect/most
  old7q_bestgenes  overbestgenes  -genegroup='homolog,paralog,ref,rseq'
  +  -scoretype='homolog:7,paralog:1,ref:3,est:3,pro:3,rseq:2,intr:20,nintron:50,inqual:20,terepeat:-1,UTR:1,CDS:1'
  +  -dropscore='homolog:30,ref:119,est:119,pro:119,rseq:119,intr:1,+CDS:180'
  +  -pctover 10 -trivial 10 -skip -summarize

  # 7r. redo with orig intron inqual= and redone mated maqual= of 7q; 7q not so good, too much maqual (and miscompute)
  old7r_bestgenes  overbestgenes  -genegroup='homolog,paralog,ref,rseq'
  +  -scoretype='homolog:7,paralog:1,ref:3,est:3,pro:3,rseq:2,intr:20,nintron:40,inqual:15,maqual:5,terepeat:-1,UTR:1,CDS:1'
  +  -dropscore='homolog:30,ref:119,est:119,pro:119,rseq:119,intr:1,inqual:10,maqual:99,+CDS:180'
  +  -pctover 10 -trivial 10 -skip -summarize


  # an8/7t. using .genescore tables, newscores: terepeat:-3, intr:10, 
  #   using aphid2_{epir2,epir16b,epi4}, bestgenes_of4.an7g2 << using .ckup.gff 
  #     mustkeep.gff, rnagene/pasa2_aphid3, 
  #   rnagene/aphid_rnaseq_cufftrin,  << update from .addprot.gff
  #     ^^ replace with aphid_rnaseq.all27cuff8mecdso.an7.hiscore.gff,aphid_trinity.ident1.an2.hiscore.gff
  #     adding acyr1-ACYPImRNA.hobest.gff, aphid_valrefseq.an7.gff 
  
  #8a:scoretype='homolog:7,paralog:1,ref:3,est:3,pro:3,rseq:2,intr:10,nintron:40,inqual:15,maqual:5,terepeat:-3,UTR:1,CDS:1'
  #8b:scoretype='homolog:9,paralog:1,ref:5,est:5,pro:3,rseq:5,intr:25,nintron:40,inqual:25,maqual:5,terepeat:-3,UTR:1,CDS:1'
  #8c:scoretype='homolog:9,paralog:1,ref:2,est:3,pro:3,rseq:2,intr:20,nintron:40,inqual:20,maqual:5,terepeat:-3,UTR:1,CDS:1'
  #8d:scoretype='homolog:9,paralog:1,ref:2,est:3,pro:3,rseq:2,intr:20,nintron:40,inqual:20,maqual:5,terepeat:-3,UTR:3,CDS:1'
    
  bestgenes  overbestgenes  -genegroup='homolog,paralog,ref,rseq' -sourceor=AUGepir16b,pasa2_aphid3
  +  -scoretype='homolog:9,paralog:1,ref:2,est:3,pro:3,rseq:2,intr:20,nintron:40,inqual:20,maqual:5,terepeat:-3,UTR:3,CDS:1'
  +  -dropscore='homolog:30,ref:119,est:119,pro:119,rseq:119,intr:1,inqual:10,maqual:99,+CDS:180'
  +  -pctover 10 -trivial 10 -skip -summarize

end anoption

# cat map/pickgene-aphid2x.results | cut -f4,5 | perl -pe ' s/gid=(m|mu|mi|mx|xm)\d+/gid=/; s/(gpick|gid)=//g; '\
#   > genes/mustkeepdrop.list

# $evigene/scripts/annotate_predictions.pl -noanno -vers an7m -conf=genes/evigene_aphid2.conf \
# genes/aphid2_{epir2,epir16b,epi4}*.an7.inq.gff genes/bestgenes_of4.an7g2.inq.gff \
# rnagene/aphid_rnaseq_cufftrin_infull.an7sc.gff  \
# rnagene/pasa2_aphid3.asmbl_bestgenes.an7.inq.gff \
# > & genes/bestgenes_of.an7m.log

# best7j: better than 7i, using rnagene, BUT many poor rnagene showing up
# >> best7k: redo using pasa checked asm of rnagene, then use bestgenes to filter keep only long, introned asm
# .. rna-asm w/ long introns are best of loci, pasa drops long intron est: revise that w/ valid long intr

pubopt:

  #old.publicid = EG2ap000000
  publicid = acyp2eg0000000
  altid = t0
  altflag = alttr
  addgene = 1
  chrsort = 1 # full location sort including chr numbering

  keepsource = acypi|ars17trinity|ars27cuf8|pasa2_aphid3|ref_aphid2
  keepids = bestgenes.DGILmix8d.addback1.ids
  movescorevec = 1
  # fields to remove from annots
  dropexonannot = pro1 oid  # leave others? or drop all exon annots?  pasa rseq est intr 
  dropannot = insplit pro1 upstatus Coverage Identity Parent
  + evd_fA evd_fE evd_fI evd_fP evd_fR evd_fTE evd_pA evd_pE evd_pI
  + evd_pP evd_pR evd_pTE evdpA evdpE evdpI evdpP evdpR evdpTE

  addprot = addproteins # missgff genome prot  # is this ok? build cmd options in program

end pubopt

# group: programs
programs:
  overlapfilter   scripts/overlapfilter.perl
  overlapeval     scripts/overlapeval.pl
  overbestgenes   scripts/overbestgene2.perl
  addproteins	  scripts/pa2dgg_gff3proteins.pl   # requires perl lib PASA/PerlLib
end programs

