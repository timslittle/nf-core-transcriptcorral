# evigene_wasp2_gbsubmit.conf
# evigene config for genbank submit (tbl format for tbl2asn)
# drawn from  gmod/schema/GMODTools/conf/bulkfiles/genbanksubmit.xml
# syntax: key value with group headers, # comments

# $evigene/scripts/evigene2genbanktbl.pl -debug  -change genes/gbsubmit.droplist -conf genes/evigene_gbsubmit.conf \
#  -in genes/pub11t/pub11t.good.gff.gz  -out submit/pub.tbl > & log.sub &
#
# tbl2asn -p submit/ -t  submit/gbsubmit.sbt -a s -V vb -X E -Z submit/gbsub.discrep  > & log.tbl$i &
##  -n "Species name" -C projectID

name    nasvi2evigene
genome  nasvit1asm
species   Nasonia vitripennis
taxid     7425
date      20120106
databaseid      Nasvi   # any?
locus_tag       Nasvi   #  http://www.ncbi.nlm.nih.gov/bioproject/00000 NCBI genome project locus tag prefix

sourcetitle     nasvi2evigene
projecttitle    Genome sequencing of the parasitoid wasp Nasonia vitripennis
ncbiprojectid   13660
ncbiurl         http://www.ncbi.nlm.nih.gov/bioproject/13660
# WGS         AAZX01000001-AAZX01026605
# WGS_SCAFLD  CM000915-CM000919    Nvit_2.0
# WGS_SCAFLD  GL340784-GL342990


evidence:
  genes       genes/pub11u/pub11u.good.gff.gz 
  genescore   genes/pub11u/pub11u.genescore
  # proteins0   genes/pub11t/pub11t.good.aa.gz  
  proteins    gff  # flag to pull protein= from gff.mRNA
  
  genome	      genome/nasvit1asm.fa		 
  # genomequal  genome/nasvit1asm.fa.qual.gz
  chrindex      genome/nasvit1asm.fa.count	# not used here for sort order
  ## drop genomesplit, single scafs work well enough but most are in other
  #   genomesplit  SCAFFOLD1 SCAFFOLD2 SCAFFOLD3 SCAFFOLD4 SCAFFOLD5 SCAFFOLD6
  #              + SCAFFOLD7 SCAFFOLD8 SCAFFOLD9 SCAFFOLD10 other
    
end evidence

addgenescore = ovpro|ovrna

# add dbxref: paragraph for many possible db tags translated to gbsubmit allowed subsets
dbxref_other PGN 
dbxref_ok  taxon LocusID GeneID GI dbEST dbSNP TrEMBL Swiss-Prot  UNILIB InterPro ENSEMBL GO 
  + JGIDB ESTLIB  APHIDBASE AntWeb BEETLEBASE dictyBase FLYBASE GDB GeneDB GRIN MGI PDB PFAM PGN SGD SGN TAIR VectorBase WormBase ZFIN

# dang them, not these: DDBJ EMBL NCBI > LocusID? config?

#FIXME: inference similar to RNA sequence, EST:dbEST:99
# for wasp, all EST in dbEST, but dont have IDs
dbxref_est   dbEST
dbxref_skip  NcbiRef2


# conversion of bestgenes.gff annotations to genbank feature types, attribs

attr_source:
  ID    db_xref 
  Name  name
  Alias name
  chromosome chromosome
  species organism
  organism organism
  Dbxref db_xref
  mol_type mol_type
end  

# separate CDS and mRNA attrs: Dbxref, ortholog, paralog == protein attr
attr_gene:
  ID    locus_tag # also gene? or not
  Dbxref db_xref
  myxref db_xref
end  

attr_CDS:
  ID    transcript_id # and/or locus_tag 
  protid    protein_id  # make  from transcript_id: t1 -> p1
  #No# gene  gene  # avoid overlap/intronic gene problem w/ this?
  #No# gene    locus_tag # also gene? or not
  Name      product 
  lowqualname  note=weak-homolog-product:
  Dbxref    db_xref
  ## need regex for Dbxref > mRNA, eg. ncbi [XN]M_ ids vs [XN]P_ ids
  myxref db_xref
  isoform   note=encoded by transcript variant 
  partial   partial
  exception  exception
  inference  inference
  ortholog  db_xref # add to db_xref?
  #no, need note# paralog   db_xref
  paralog   note=paralog= 
   # ^ redo this: CDS: paralog>db_xref ; mRNA paralog>inference=similar to AA sequence (same species):parid
  # uniprot   # already in db_xref?
end

attr_mRNA:
  ID    transcript_id  
  protid    protein_id  # transcript_id: t1 -> p1
  #No?# Dbxref db_xref
  ## need regex for Dbxref > mRNA, eg. ncbi [XN]M_ ids vs [XN]P_ ids
  myxref db_xref
  #No?# gene  gene
  gene    locus_tag # also gene? or not
  Name  product
  lowqualname  note=weak-homolog-product:
  Note  note
  isoform   note=transcript variant
  quality   note=quality=
  express   inference   # need estasm IDs for /inference= or /experiment=
  trasm     inference   # from oid of all alttr = transcript assemblies
  ovrna     inference
  ovpro     inference
  ortholog  inference
  paralog   inference
#   aaSize    skip  
#   cdsSize   skip
#   oname     skip
#   intron    skip
#   oid       skip
#   location  skip
#   score     skip  
end

# reclassed gene/mRNA .. e.g Gene fragments, partof
attr_misc_feature:
  #ID    locus_tag # also gene? or not
  gene    locus_tag # also gene? or not
  Dbxref db_xref
  myxref db_xref
  #protid    protein_id  # transcript_id: t1 -> p1
  #Name  product
  Note  note
  #isoform   note=transcript variant
  quality   note=quality=
  express   inference   # need estasm IDs for /inference= or /experiment=
  trasm     inference   # from oid of all alttr = transcript assemblies
  ovrna     inference
  ovpro     inference
  ortholog  inference
  paralog   inference
end

attr_ncRNA:
  ID    transcript_id 
  Dbxref db_xref
  myxref db_xref
  gene  locus_tag # also gene? or not
  Name  product
  Note  note
  isoform   note=transcript variant
  quality   note=quality=
  express   inference   # need estasm IDs for /inference= or /experiment=
  trasm     inference   # from oid of all alttr = transcript assemblies
  ovrna     inference
end

#.. drosmel TE genbank format
#      mobile_element  complement(2506..4343)
#                      /mobile_element_type="transposon:Rt1c{}1472"
#                      /db_xref="FLYBASE:FBti0020396"

attr_transposon:
  type  mobile_element   # recode transposon to this type
  #no# ID    locus_tag # or db_xref   
  Dbxref db_xref
  myxref db_xref   # == my id
  Target note=source: # db_xref  #which?
  Note  note
  Name  mobile_element_type # type:name, eg, "transposon:Tnp9", type from list:
      # "transposon", "retrotransposon", "integron", "insertion sequence", "non-LTR retrotransposon", 
      # "SINE", "MITE", "LINE", "other".
      ## have Order: Helitron,LINE,LTR,  TIR/hAT,MITE
      # Name=Order/Superfam-Fam >>  rpt_family
      # Name=LTR/Gypsy-Tcr360;class=I.I.1
      # Name=TIR/hAT-Ukn;class=II.I.2
      # Name=Helitron/hAT-Ukn;class=II.II
      #.. class=II = transposon; class=I = retrotransposon (== LTR)
  # inference=alignment:repeatmasker:n:evdbasis=xxx (dbxref?)
  # ovte  inference #? not for this
end


# group: programs
programs:
  # tbl2asn  = /bio/bio-grid/mb/ncbic/bin/tbl2asn
  tbl2asn  = ./tbl2asn
  tbl2asnopts = -V vb -Z discrep -a s -t template.sbt
  ##.. soft now adds: -n species -C databaseid
  #NO# tbl2asnopts = -g -V vb 
  # -a       r10k Runs of 10+ Ns are gaps, 100 Ns are known length

  progvers = gmap=GMAP:11 vel=Velvet:11 
  + cuf8=Cufflinks:08 cuf1=Cufflinks:11 
  + pasa=PASA:2 puevd=PASA:2 
  + exonerate_prot=exonerate-protein:2
  
#   overlapfilter   scripts/overlapfilter.perl
#   overlapeval     scripts/overlapeval.pl
#   overgenedup     scripts/overgenedup.pl
#   overbestgenes   scripts/overbestgene2.perl
#   addproteins	    scripts/genefindcds.pl   # updated
end programs

# see http://www.ncbi.nlm.nih.gov/WebSub/template.cgi  cacao/cacao11ncbi.sbt
submit_template:
  doc  = Submit-block ::= { \n\
  contact { contact { \n\
      name name { last "Gilbert" , first "Donald" ,  initials "D.G."  } , \n\
      affil std { \n\
          affil "Indiana University" , \n\
          div "Biology Department" , \n\
          city "Bloomington" , state "Indiana", \n\
          street "1000 E. 3rd St." , postal-code "47405", \n\
          country "United States of America" , \n\
          email "gilbertd@indiana.edu" , \n\
          phone "812-333-5616" } \n\
    } } , \n\
  cit { \n\
    authors { \n\
      names std { \n\
          { \n\
          name name { last "Gilbert" , first "Donald" , initials "D.G." } } \n\
          } , \n\
      affil std { \n\
          affil "Indiana University" , \n\
          div "Biology Department" , \n\
          email "gilbertd@indiana.edu" , \n\
          city "Bloomington" , state "Indiana", \n\
          country "United States of America" , \n\
          street "1000 E. 3rd St." , postal-code "47405", \n\
    } , \n\
    date  std { year 2012 , month 01 ,  day 06 } \n\
  } , \n\
  subtype new  }
  
end submit_template

#--------------  

pubopt:

  publicid = Nasvi2EG000000

  nameless    = Unknown|Uncharacterized|Hypothetical
  # nameunknown = Hypothetical protein    # ncbi, 
  nameunknown = Uncharacterized protein   # uniprot 2011
  nameunkaddid = 0 # turn off Unc.. locus Thecc11111 addition for gbsubmit complaints
    #  prefer uniprot: Unchar as most mRNA (if not prot) have evidence not hypothetic
  nameuncertain = putative # at end; 
  pctuncertain  = 60  #  min ident% for nameuncertain
  pctunknown    = 35  #  min similar% for protein evid align/equivalence, for naming; JCVI uses 35% MIN_PROIDENT
  ## pctlike = 15 # keep name w/ minimal sim, but add -like ??
  pctproevidence = 10 #  min similar% for protein evid ; not used for naming 
  pctrnaevidence = 10 #  min align% to keep  EST/Rna evidence ; not used for naming MIN_ESTIDENT
    #   "Hypothetical protein"  << avoid: uniprot nameprot 2011_01
    #   "Uncharacterized protein" << recommend: uniprot nameprot 2011_01
    # Proteins which are NOT conserved or with no known or predicted function or
    # characteristics should be called "Uncharacterized protein <OLN>".
      
  altid = t0
  ignore_source_altid = 0
  altflag = alttr
  nochangeid = 1 # final pub sort
  
  # addgene = 1
  chrsort = 1 # full location sort including chr numbering
  # chrsortgene=1  # for genbanksubmit, break splitgene recs to chrs
  # chrsortlast = mito rdna
  # chrrename = XXX=yyy   mito=skip
    
#  # fields to remove from annots
#   dropexonannot = pro1 oid Target targ trg
#     # leave others? or drop all exon annots?  pasa rseq est intr 
#   dropannot = insplit inexon pct_support pro1 upstatus Coverage Identity Parent Target targ trg
#   + cdsb cdse cov pid qlen ocds oaaln
#   + pID nexon sense best_pro ho3 intronfix path qmatch
#   + evd_fA evd_fE evd_fI evd_fP evd_fR evd_fTE evd_pA evd_pE evd_pI
#   + evd_pP evd_pR evd_pTE evdpA evdpE evdpI evdpP evdpR evdpTE
#   + sup_cdsi sup_cdsi.A sup_cdsi.I sup_cdsi.P sup_cdsi.E sup_cdsi.R 
#   + sup_cdsx sup_cdsx.A sup_cdsx.I sup_cdsx.P sup_cdsx.E sup_cdsx.R 
#   + sup_utr3 sup_utr3.A sup_utr3.I sup_utr3.P sup_utr3.E sup_utr3.R  
#   + sup_utr5 sup_utr5.A sup_utr5.I sup_utr5.P sup_utr5.E sup_utr5.R 

  # addprot addproteins  -full=1 -dna $genome  -genes $genes  #  > $newgenes  

end pubopt


